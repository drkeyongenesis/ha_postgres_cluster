---
- hosts: pgs
  become: yes
  vars:
    pg_version: 16
    patroni_version: 4.0.4
    scope_name: mycluster
    ip_1: 172.20.10.6
    ip_2: 172.20.10.7
    ip_3: 172.20.10.8
    port_num: 5566
  tasks:
    - name: Add PostgreSQL Repository for Ubuntu 24.04 Release
      shell: |
        apt install -y curl ca-certificates
        install -d /usr/share/postgresql-common/pgdg
        curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc
        echo "deb [arch=amd64 signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
      args:
        executable: /bin/bash

    - name: Install PostgreSQL and required packages
      apt:
        name: "{{ item }}"
        state: present
        update_cache: yes
      with_items:
        - net-tools
        - "postgresql-{{ pg_version }}"
        - "postgresql-client-{{ pg_version }}"
        - "postgresql-server-dev-{{ pg_version }}"
        - python3-pip
        - watchdog

    - name: Create required directories for PostgreSQL
      file:
        path: "{{ item }}"
        owner: postgres
        group: postgres
        mode: '0700'
        state: directory
      with_items:
        - /pgsql-data
        - /pgsql-wal
    
    - name: Create required directories for PostgreSQL
      file:
        path: "{{ item }}"
        owner: postgres
        group: postgres
        mode: '0700'
        state: touch
      with_items:
        - /etc/patroni.yml

    - name: Install Patroni packages
      pip:
        name: "{{ item }}"
        executable: pip3
        extra_args: "--break-system-packages"
      with_items:
        - setuptools
        - psycopg2-binary
        - "patroni=={{ patroni_version }}"
        - 'patroni[etcd]'
        - python-etcd

    - name: Copy Patroni service file
      copy:
        src: files/patroni.service
        dest: /usr/lib/systemd/system/patroni.service
        owner: root
        group: root
        mode: '0644'

    - name: Refresh permissions for local Python libraries
      shell: chmod -R 775 /usr/local/lib/python*
      ignore_errors: yes

    - name: Remove initial PostgreSQL cluster
      shell: pg_dropcluster --stop {{ pg_version }} main
      ignore_errors: yes

    - name: Get Memory Info %75
      shell: free -g | grep Mem | awk '{print $7}' | awk '{printf "%.0f\n", $0 * 0.75}'
      register: memory_output75
    
    - name: Get Memory Info %50
      shell: free -g | grep Mem | awk '{print $7}' | awk '{printf "%.0f\n", $0 * 0.5}'
      register: memory_output50
    
    - name: Get Memory Info
      shell: free -g | grep Mem | awk '{print $7}'
      register: memory_size_in_gb
      
    - name: Get CPU Info
      shell: lscpu | grep 'CPU(s)' | head -1 | awk '{print $2}'
      register: cpu_info
    
    - name: Set variables
      set_fact:
        setmemory_output75: "{{ memory_output75.stdout }}"
        setmemory_output50: "{{ memory_output50.stdout }}"
        setmemory_output: "{{ memory_size_in_gb.stdout }}"
        setcpu_output: "{{ cpu_info.stdout }}"
    
    - name: Set memory-cpu related parameters
      set_fact:
        effective_cache_size: "{{ (memory_size_in_gb.stdout | int * 0.75) | round | int }}GB"
        shared_buffers: "{{ (memory_size_in_gb.stdout | int * 0.25) | round | int }}GB"
        max_worker_processes: " {{ setcpu_output }} "
        max_parallel_workers: " {{ setcpu_output }} "
        work_mem: "{{ (setmemory_output) }}MB"
        maintenance_work_mem: "{{ setmemory_output }}MB"
        max_connections: "{{ (memory_size_in_gb.stdout |int < 100) | ternary('1000', '5000') }}"
    
    - name: patroni.yml file modification
      blockinfile:
        path: "/etc/patroni.yml"
        block: |
          scope: {{ scope_name }}_cluster
          namespace: {{ scope_name }}
          name: {{ server_name }}
          restapi:
            listen: {{ ip_addr }}:8008
            connect_address: {{ ip_addr }}:8008
          etcd3:
            hosts: {{ ip_1 }}:2379,{{ ip_2 }}:2379,{{ ip_3 }}:2379
          bootstrap:
            dcs:
              ttl: 30
              failsafe_mode: true
              loop_wait: 10
              retry_timeout: 10
              maximum_lag_on_failover: 1048576
              synchronous_mode: false
              postgresql:
                use_pg_rewind: true
                use_slots: true
                parameters:
                  hot_standby: "on"
                  listen_addresses = '*'
                  port: '{{ port_num }}'
                  archive_mode: "on"
                  archive_timeout: 1800s
                  archive_command: 'pgbackrest --stanza={{ scope_name }} archive-push %p'
                  datestyle: iso, mdy
                  effective_cache_size: '{{ effective_cache_size }}'
                  effective_io_concurrency: 300
                  enable_partitionwise_aggregate: "on"
                  log_checkpoints: "on"
                  log_connections: "on"
                  log_destination: stderr
                  log_directory: log
                  log_disconnections: 'on'
                  log_error_verbosity: default
                  log_filename: 'postgresql-%a.log'
                  log_hostname: 'on'
                  log_line_prefix: '%m %h %d %u %a %p %i '
                  log_lock_waits: 'on'
                  log_min_duration_statement: 500
                  log_rotation_age: '1h'
                  log_statement: ddl
                  log_temp_files: 0
                  log_truncate_on_rotation: 'on'
                  logging_collector: 'on'
                  lc_messages: 'C'
                  maintenance_work_mem: '{{ maintenance_work_mem }}'
                  max_connections: '{{ max_connections }}'
                  max_parallel_maintenance_workers: 4
                  max_parallel_workers: '{{ max_parallel_workers }}'
                  max_parallel_workers_per_gather: 4
                  max_replication_slots: 10
                  max_standby_archive_delay: 300s
                  max_standby_streaming_delay: 300s
                  max_wal_senders: 10
                  max_worker_processes: '{{ max_worker_processes }}'
                  min_wal_size: 8GB
                  max_wal_size: 80GB
                  wal_buffers: 64MB
                  bgwriter_delay: 50ms
                  bgwriter_lru_multiplier: 4
                  bgwriter_lru_maxpages: 5000
                  checkpoint_timeout: 15min
                  checkpoint_completion_target: 0.9
                  random_page_cost: 1.1
                  shared_buffers: '{{ shared_buffers }}'
                  shared_preload_libraries: pg_stat_statements
                  superuser_reserved_connections: 10
                  track_io_timing: 'on'
                  wal_keep_segments: 1000
                  wal_level: replica
                  wal_log_hints: 'on'
                  work_mem: '{{ work_mem }}'
            initdb:
            - encoding: UTF8
            - data-checksums
            users:
              admin:
                password: pass123
                options:
                  - createrole
                  - createdb
          postgresql:
            listen: 0.0.0.0:{{ port_num }}
            connect_address: '{{ ip_addr }}:{{ port_num }}'
            data_dir: /pgsql-data
            config_dir: /pgsql-data
            bin_dir: /usr/lib/postgresql/{{ pg_version }}/bin
            create_replica_methods:
                  - basebackup
            basebackup:
              - verbose
              - checkpoint: fast
              - waldir: /pgsql-wal
            authentication:
              replication:
                username: replicator
                password: pass123
              superuser:
                username: postgres
                password: pass123

    - name: Enable and start Patroni service
      systemd:
        name: patroni
        state: restarted
        enabled: true

    - name: Wait for Patroni to start
      wait_for:
        port: 8008
        host: "{{ ip_addr }}"
        state: started
        timeout: 60

    - name: Verify Patroni status
      command: patronictl -c /etc/patroni.yml list
      register: patroni_status
      retries: 5
      delay: 10
      until: patroni_status.rc == 0
      ignore_errors: yes

    - debug:
        var: patroni_status.stdout_lines
