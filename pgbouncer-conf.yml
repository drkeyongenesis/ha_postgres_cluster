---
- name: Configure PgBouncer for Patroni HA
  hosts: pgs
  become: true
  vars:
    pgbouncer_conf_dir: "/etc/pgbouncer"
    pgbouncer_log_dir: "/var/log/pgbouncer"
    pgbouncer_userlist: "/etc/pgbouncer/userlist.txt"
    pgbouncer_hba: "/etc/pgbouncer/pgbouncer_hba.conf"
    pgbouncer_config: "/etc/pgbouncer/pgbouncer.ini"
    pgbouncer_service_file: "/lib/systemd/system/pgbouncer.service"

  tasks:
    - name: Install PgBouncer
      apt:
        name: pgbouncer
        state: present

    - name: Create PgBouncer directories
      file:
        path: "{{ item }}"
        state: directory
        owner: postgres
        group: postgres
        mode: '0755'
      with_items:
        - "{{ pgbouncer_conf_dir }}"
        - "{{ pgbouncer_log_dir }}"

    - name: Create userlist.txt for PgBouncer
      copy:
        dest: "{{ pgbouncer_userlist }}"
        content: |
          "dba_group"    "dba_password"
        owner: postgres
        group: postgres
        mode: '0640'

    - name: Create PgBouncer HBA configuration
      copy:
        dest: "{{ pgbouncer_hba }}"
        content: |
          # TYPE  DATABASE        USER            ADDRESS                 METHOD

          # "local" is for Unix domain socket connections only
          # IPv4 local connections:
          host    all             dba_group        10.0.0.0/8              md5
          host    all             all              192.168.1.1/16          md5
          # IPv6 local connections:
        owner: postgres
        group: postgres
        mode: '0640'

    - name: Create PgBouncer main configuration
      copy:
        dest: "{{ pgbouncer_config }}"
        content: |
          [databases]
          * = port=5566 host=127.0.0.1
          [pgbouncer]
          logfile = {{ pgbouncer_log_dir }}/pgbouncer.log
          pidfile = /var/run/pgbouncer/pgbouncer.pid
          listen_addr = *
          listen_port = 6437
          auth_type = hba
          auth_file = {{ pgbouncer_userlist }}
          auth_hba_file = {{ pgbouncer_hba }}
          admin_users = postgres,dba_group
          stats_users = postgres
          pool_mode = transaction
          unix_socket_dir = /tmp
          unix_socket_mode = 0777
          unix_socket_group =
          ignore_startup_parameters = intervalStyle,application_name,extra_float_digits
          max_client_conn = 1000
          max_db_connections = 150
          default_pool_size = 100
          reserve_pool_size = 10
          log_connections = 1
          log_disconnections = 1
          log_pooler_errors = 1
          log_stats = 1
          verbose = 0
          server_reset_query_always = 1
          server_check_query = select 1
          server_check_delay = 30
          server_fast_close = 0
          application_name_add_host = 1
          stats_period = 60
          reserve_pool_timeout = 1
          server_lifetime = 300
          server_idle_timeout = 60
          server_connect_timeout = 1
          server_login_retry = 5
          query_timeout = 180
          query_wait_timeout = 180
          client_idle_timeout = 60
          client_login_timeout = 30
          so_reuseport=1
        owner: postgres
        group: postgres
        mode: '0640'

    - name: Create PgBouncer systemd service
      copy:
        dest: "{{ pgbouncer_service_file }}"
        content: |
          [Unit]
          Description=A lightweight connection pooler for PostgreSQL template
          Documentation=man:pgbouncer(1)
          After=syslog.target network.target

          [Service]
          RuntimeDirectory=pgbouncer
          RemainAfterExit=yes

          User=postgres
          Group=postgres

          # Path to the init file
          Environment=BOUNCERCONF=/etc/pgbouncer/pgbouncer.ini

          ExecStart=/usr/sbin/pgbouncer -q ${BOUNCERCONF}
          ExecReload=/bin/kill -HUP $MAINPID
          KillSignal=SIGINT
          # Give a reasonable amount of time for the server to start up/shut down
          TimeoutSec=300

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable and Start PgBouncer
      systemd:
        name: pgbouncer
        state: started
        enabled: true

    - name: Verify PgBouncer service
      systemd:
        name: pgbouncer
        state: started
        enabled: true
