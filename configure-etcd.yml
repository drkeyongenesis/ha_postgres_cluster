---
- name: Configure etcd on all database nodes
  hosts: pgs
  become: true
  vars:
    etcd_version: "3.5.17"
    etcd_install_dir: "/usr/local/bin"
    etcd_data_dir: "/var/lib/etcd"
    etcd_config_file: "/etc/etcd/etcd.conf.yml"
  tasks:
    - name: Install prerequisites
      apt:
        name:
          - wget
          - tar
        state: present

    - name: Create etcd directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      with_items:
        - "{{ etcd_data_dir }}"
        - "/etc/etcd"
        
    - name: Extract etcd binary
      unarchive:
        src: "/tmp/etcd-v{{ etcd_version }}-linux-arm64.tar.gz"
        dest: "/tmp/"
        remote_src: true

    - name: Copy etcd and etcdctl to installation directory
      copy:
        src: "/tmp/etcd-v{{ etcd_version }}-linux-arm64/{{ item }}"
        dest: "{{ etcd_install_dir }}/{{ item }}"
        mode: '0755'
        remote_src: true
      with_items:
        - etcd
        - etcdctl

    - name: Create etcd configuration file
      template:
        src: "files/etcd.conf.j2"
        dest: "{{ etcd_config_file }}"
        mode: '0644'

    - name: Create systemd service for etcd
      copy:
        dest: /etc/systemd/system/etcd.service
        content: |
          [Unit]
          Description=etcd key-value store
          Documentation=https://github.com/etcd-io/etcd
          After=network.target

          [Service]
          User=root
          Type=notify
          ExecStart=/usr/local/bin/etcd --config-file={{ etcd_config_file }}
          Restart=always
          RestartSec=5s
          LimitNOFILE=40000

          [Install]
          WantedBy=multi-user.target
        mode: '0644'

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Start and enable etcd service
      systemd:
        name: etcd
        state: started
        enabled: true

    - name: Verify etcd status
      command: etcdctl --endpoints=http://{{ ansible_host }}:2379 endpoint status
      register: etcd_status
      retries: 5
      delay: 10
      failed_when: "'unavailable' in etcd_status.stdout"

    - debug:
        msg: "Etcd successfully configured on {{ ansible_host }}"
